'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SimpleTabLabels = function (_Component) {
  _inherits(SimpleTabLabels, _Component);

  function SimpleTabLabels() {
    _classCallCheck(this, SimpleTabLabels);

    return _possibleConstructorReturn(this, Object.getPrototypeOf(SimpleTabLabels).apply(this, arguments));
  }

  _createClass(SimpleTabLabels, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var style = Object.assign({}, {
        listStyle: 'none'
      }, this.props.style);

      var labels = this.props.tabs.map(function (tab, index) {
        var style = Object.assign({}, {
          display: "inline-block"
        }, tab.style);

        if (_this2.props.currentTab == index) style = Object.assign({}, style, tab.activeStyle);

        return React.createElement(SimpleTabLabel, {
          title: tab.title,
          key: index,
          index: index,
          onTabChange: _this2.props.onTabChange,
          style: style });
      }.bind(this));

      return React.createElement(
        'ul',
        { style: style },
        labels
      );
    }
  }]);

  return SimpleTabLabels;
}(_react.Component);

SimpleTabLabels.propTypes = {
  tabs: _react.PropTypes.array.isRequired,
  style: _react.PropTypes.object
};

var SimpleTabLabel = function (_Component2) {
  _inherits(SimpleTabLabel, _Component2);

  function SimpleTabLabel() {
    _classCallCheck(this, SimpleTabLabel);

    return _possibleConstructorReturn(this, Object.getPrototypeOf(SimpleTabLabel).apply(this, arguments));
  }

  _createClass(SimpleTabLabel, [{
    key: 'onClick',
    value: function onClick(e) {
      this.props.onTabChange(this.props.index);
    }
  }, {
    key: 'render',
    value: function render() {
      return React.createElement(
        'li',
        {
          style: this.props.style,
          onClick: this.onClick.bind(this) },
        this.props.title
      );
    }
  }]);

  return SimpleTabLabel;
}(_react.Component);

SimpleTabLabel.propTypes = {
  title: _react.PropTypes.any.isRequired,
  index: _react.PropTypes.number.isRequired
};
exports.default = SimpleTabLabel;


module.exports = SimpleTabLabels;